4
В какой-то момент Игорю надоело, что вечно он плохо выступает на соревнованиях по спортивному программированию. В связи с этим он принял импульсивное решение бросить это дело и уйти с головой в работу.

Для этого как раз подвернулось предложение о стажировке в IT-компании «Ты», где Игорь отработал честные три месяца. Под конец стажировки он порефлексировал над предыдущими ошибками в спортивном программировании и решил вернуться. Разумеется, после промежутка в несколько месяцев свое возвращение стоило начать с задач попроще. Например, с поиска делителей в числе.

Для этого есть всем известный алгоритм:

 

int cnt = 0;
for (int i = 1; i * i <= n; i++) {
    if (n % i) continue;
    cnt++;
    if (i * i != n) cnt++;
}
return cnt;

Однако при написании кода Игорь очень спешил и вместо символа `\%' случайно написал символ `&' (можете проверить — они находятся близко к друг другу на клавиатуре!):

 

int cnt = 0;
for (int i = 1; i * i <= n; i++) {
    if (n & i) continue;
    cnt++;
    if (i * i != n) cnt++;
}
return cnt;

Игорь долго не мог понять, что с его программой не так, но вскоре смог найти ошибку и исправить ее. Однако Игорю стало очень интересно, а что за алгоритм он написал в самом начале. Он хочет теперь узнать, какое значение вернет этот алгоритм при каком-то заданном n.

Система оценки
Подгруппа	Доп. ограничения n	Доп. ограничения t	Баллы	Необх. подгруппы
1	n = 2k для некоторого целого k	—	15	—
2	n ≤ 106	—	15	—
3	n ≤ 1012	t = 1	15	—
4	—	—	55	—
Обратите внимание, что для прохождения подгрупп ваша программа не обязана выдавать верный ответ на примерах из условия.

Формат входных данных
В первой строке задано одно целое число t (1 ≤ t ≤ 103) — количество наборов входных данных.

В единственной строке каждого набора входных данных дано одно целое число n (1 ≤ n ≤ 262) — число, по значению которого нужно посчитать значение, возвращаемое алгоритмом.
Формат выходных данных
Для каждого набора входных данных выведите ответ на задачу.
